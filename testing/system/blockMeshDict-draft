/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant/polyMesh";
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;


vertices
(
    // pre-block -0.5<z<0.5
	(-25 -10 0.5)// vertex 0
	(-10 -10 0.5) // vertex 1
	(-10 -10 -0.5) // vertex 2
	(-25 -10 -0.5) // vertex 3
	
	(-25 10 0.5) // vertex 4
	(-10 -10 0.5) // vertex 5
	(-10 10  -0.5) //vertex 6
	(-25 10 -0.5) // vertex 7


    // obstacle blocks
	// bottom
	(10 -10 0.5) //vertex 8
	(10 -10 -0.5) // vertex 9
	(-1.767766953 -1.767766953 0.5) //vertex10
	(1.767766953 -1.767766953 0.5) //vertex11
	(1.767766953 -1.767766953 -0.5) //vertex12
	(-1.767766953 -1.767766953 -0.5) //vertex13
	// left
	(-1.767766953 1.767766953 0.5)// vertex 14
	(-1.767766953 1.767766953 -0.5)// vertex 15
		
	// top
	(1.767766953 1.767766953 0.5)// vertex 16
	(1.767766953 1.767766953 -0.5)// vertex 17
	(10 10 0.5) // vertex 18
	(10 10 -0.5) // vertex 19
	// right
	
 // all the vertices are already defined


    // post-block
        (65 -10 0.5) // vertex 20
        (65 -10 -0.5) // vertex 21
        (65 10 0.5) // vertex 22
        (65 10 -0.5)// vertex 23
    
    
    
);

blocks
(
    // pre-block
    hex ( 0  1  2  3  4  5  6  7) ( 60 1 30) simpleGrading (1 1 1)

    // obstacle blocks
    hex ( 1  8  9  2 10 11 12 13) (     30 1 30) simpleGrading (1 1 1) // bottom
    hex ( 1 10 13  2  5 14 15  6) (     30 1 30) simpleGrading (1 1 1) // left
    hex (14 16 17 15  5 18 19  6) (     30 1 30) simpleGrading (1 1 1) // top
    hex (11  8  9 12 16 18 19 17) (     30 1 30) simpleGrading (1 1 1) // right

    // post-block
    hex ( 8 20 21  9 18 22 23 19) (180 1 30) simpleGrading (1 1 1)
);

edges
(
    arc 10 11 (   0 -2.5  0.5)
    arc 12 13 (   0 -2.5 -0.5)
    arc 14 10 (-2.5    0  0.5)
    arc 15 13 (-2.5    0 -0.5)
    arc 14 16 (   0  2.5  0.5)
    arc 15 17 (   0  2.5 -0.5)
    arc 16 11 ( 2.5    0  0.5)
    arc 17 12 ( 2.5    0 -0.5)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            ( 0  4  7  3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (20 21 23 22)
        );
    }
    wall
    {
        type wall;
        faces
        (
            ( 4  5  6  7)
            ( 5 18 19  6)
            (18 22 23 19)

            ( 0  1  2  3)
            ( 1  8  9  2)
            ( 8 20 21  9)
        );
    }
    obstacle
    {
        type wall;
        faces
        (
            (10 11 12 13)
            (11 16 17 12)
            (14 16 17 15)
            (10 14 15 13)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            ( 0  1  5  4)
            ( 1 10 14  5)
            (14 16 18  5)
            (11  8 18 16)
            ( 1  8 11 10)
            ( 8 20 22 18)

            ( 3  7  6  2)
            ( 2  6 15 13)
            (15  6 19 17)
            (12 17 19  9)
            ( 2 13 12  9)
            ( 9 19 23 21)
        );
    }
);

mergePatchPairs
(
);
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
