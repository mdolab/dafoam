os: linux
dist: bionic
language: generic

services:
    - docker

env:
  global:
    - REPO_NAME=dafoam
    - DOCKER_WORKING_DIR=/home/dafoamuser/$REPO_NAME
    - DOCKER_MOUNT_DIR=/home/dafoamuser/mount/$REPO_NAME
    - DOCKER_TAG=latest
    - DOCKER_PIP_INSTALL_PATH=/home/dafoamuser/.local/lib/python3.6/site-packages

notifications:
  webhooks: https://coveralls.io/webhook

before_install:
    - docker pull dafoam/opt-packages:$DOCKER_TAG
    # run Docker, key is we mount the current Travis directory into Docker to access content of repo
    - docker run -it -d -u dafoamuser --name regtest
        --mount "type=bind,src=$(pwd),target=$DOCKER_MOUNT_DIR"
        dafoam/opt-packages:$DOCKER_TAG
        /bin/bash

install:
  # We thrown away the existing repo in Docker, and copy the new one in-place
  - docker exec -it regtest /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
  # Add flags for code coverage and compile
  - docker exec regtest sed -i 's/-std=c++11/-std=c++11 -coverage/g' $DOCKER_WORKING_DIR/src/adjoint/Make/options_Incompressible
  - docker exec regtest sed -i 's/-lOpenFOAM/-lOpenFOAM -lgcov/g' $DOCKER_WORKING_DIR/src/adjoint/Make/options_Incompressible
  - docker exec regtest sed -i 's/-std=c++11/-std=c++11 -coverage/g' $DOCKER_WORKING_DIR/src/adjoint/Make/options_Compressible
  - docker exec regtest sed -i 's/-lOpenFOAM/-lOpenFOAM -lgcov/g' $DOCKER_WORKING_DIR/src/adjoint/Make/options_Compressible
  # untar the input.tar.gz for tests
  - docker exec -it regtest /bin/bash -c "cd $DOCKER_WORKING_DIR/tests && rm -rf input.tar.gz && wget https://github.com/dafoam/files/releases/download/v1.0.0/input.tar.gz && tar -xzf input.tar.gz"

jobs:
  include:
    - stage: runTests
      script:
        # compile all components
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR && ./Allmake && rm -rf $DOCKER_PIP_INSTALL_PATH/dafoam* && pip install ."
        # just run the tests
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/tests && ./Allrun"

    - stage: cppCodeCoverageIncomp
      script:
        # compile incompressible solvers
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR && ./Allmake incompressible && rm -rf $DOCKER_PIP_INSTALL_PATH/dafoam* && pip install ."
        # install cpp-coveralls and coverage
        - docker exec -it regtest /bin/bash -c "pip install cpp-coveralls --user && pip install coverage --user"
        # compile and run the tests
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/tests && mpirun -np 4 python runTests_DASimpleFoam.py noCheckVal"
        # run coveralls, the -lp option is for inline functions in C++
        - docker exec -it -e TRAVIS="$TRAVIS" -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/src/adjoint && cp -r ../include ./Make/linux*/DASolver/ && cp -r ../include ./Make/linux*/ && COVERALLS_PARALLEL=true coveralls --gcov-options '\-lp'"

    - stage: cppCodeCoverageComp
      script:
        # compile incompressible solvers
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR && ./Allmake compressible && rm -rf $DOCKER_PIP_INSTALL_PATH/dafoam* && pip install ."
        # install cpp-coveralls and coverage
        - docker exec -it regtest /bin/bash -c "pip install cpp-coveralls --user && pip install coverage --user"
        # compile and run the tests
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/tests && mpirun -np 4 python runTests_DARhoSimpleFoam.py noCheckVal"
        - docker exec -it regtest /bin/bash -c "cd $DOCKER_WORKING_DIR/tests && rm -rf input && tar -xzf input.tar.gz"
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/tests && mpirun -np 4 python runTests_DARhoSimpleCFoam.py noCheckVal"
        # run coveralls, the -lp option is for inline functions in C++
        - docker exec -it -e TRAVIS="$TRAVIS" -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/src/adjoint && cp -r ../include ./Make/linux*/DASolver/ && cp -r ../include ./Make/linux*/ && COVERALLS_PARALLEL=true coveralls --gcov-options '\-lp'"

    - stage: pythonCodeCoverage
      script:
        # compile incompressible solvers
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR && ./Allmake incompressible && rm -rf $DOCKER_PIP_INSTALL_PATH/dafoam* && pip install ."
        # install coveralls and coverage
        - docker exec -it regtest /bin/bash -c "pip install coveralls --user && pip install coverage --user"
        - docker exec -it regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/tests && coverage run --include=$DOCKER_PIP_INSTALL_PATH/dafoam/pyDAFoam.py runTests_DASimpleFoam.py noCheckVal"
        # run coveralls
        - docker exec -it -e TRAVIS="$TRAVIS" -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" regtest /bin/bash -c ". /home/dafoamuser/setupDAFoam.sh && cd $DOCKER_WORKING_DIR/tests && COVERALLS_PARALLEL=true coveralls"

after_script:
  - docker rm -f regtest 
